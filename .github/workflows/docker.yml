name: Docker - build & push

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  docker-deploy:
    runs-on: ubuntu-latest

    steps:
      # Pobieranie kodu źródłowego
      - name: Checkout repo
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Update dependencies
      - name: Update dependencies
        run: |
          npm install
          npm audit fix
          npm install cross-spawn@7.0.5 --save-exact

      # Włączenie wsparcia dla architektur ARM
      - name: Emulacja QEMU
        uses: docker/setup-qemu-action@v3

      # Ustawienie narzędzia Buildx
      - name: Konfiguracja buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      # Logowanie do DockerHub, tylko do cache
      - name: Logowanie do DockerHub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Logowanie do GHCR (GitHub Container Registry)
      - name: Logowanie GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # Skrócony hash commita do tagowania obrazu
      - name: Skróć SHA
        id: sha
        run: echo "val=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      # Budowanie i wysyłanie obrazu
      - name: Build i wypchnij obraz
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=ghcr.io/asuradiso/cache:buildcache
          cache-to: type=registry,ref=ghcr.io/asuradiso/cache:buildcache,mode=max
          push: true
          tags: |
            ghcr.io/asuradiso/pogoda_zadanie2:sha-${{ steps.sha.outputs.val }}
            ghcr.io/asuradiso/pogoda_zadanie2:latest

      # Trivy - skanowanie podatności
      - name: Trivy - skan bezpieczeństwa
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ghcr.io/asuradiso/pogoda_zadanie2:sha-${{ steps.sha.outputs.val }}
          scan-type: image
          severity: HIGH,CRITICAL
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          ignore-file: .trivyignore
